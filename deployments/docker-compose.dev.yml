version: '3'
services:
  container:
    container_name: "container"
    privileged: true
    build:
      context: ..
      dockerfile: ./build/container/Dockerfile.dev
    ports:
      - "3000:3000"
    depends_on:
      - container_mongo
      - container_mongo_express
    volumes:
      - ..:/fun-cloud-api
    env_file:
      - ../configs/container/dev.env
    tty: true
  container_mongo:
    container_name: "container_mongo"
    image: mongo
    restart: always
    env_file:
      - ../configs/container/dev.env
    ports:
      - 27017:27017
    volumes:
      - "mongodb-data:/data/db"
      - "mongodb-configdb:/data/configdb"
      - "./container/mongo:/container/mongo"
  container_mongo_express:
    container_name: "container_mongo_express"
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    env_file:
      - ../configs/container/dev.env
    depends_on:
      - container_mongo
  # ---
  auth:
    container_name: "auth"
    build:
      context: ../
      dockerfile: ./build/auth/Dockerfile.dev
    ports:
      - "3000:3000"
    volumes:
      - ..:/fun-cloud-api
  db:
    image: mysql:5.7
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: auth
      MYSQL_USER: docker
      MYSQL_PASSWORD: docker
      TZ: 'Asia/Tokyo'
    command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    volumes:
      - ./auth/mysql/sql:/docker-entrypoint-initdb.d
    ports:
      - 3306:3306
  redis:
    container_name: "redis"
    image: redis:latest
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass fun-cloud
    volumes:
      - redis-data:/data

volumes:
  redis-data:
    driver: local
  mongodb-data:
    driver: local
  mongodb-configdb:
    driver: local
